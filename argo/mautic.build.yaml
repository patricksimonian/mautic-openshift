metadata:
  name: mautic-build-workflow
  namespace: de0974-tools
spec:
  templates:
    - name: main
      arguments: {}
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: clone
            template: clone
            arguments: {}
        # - - name: build-mautic-tools
        #     template: build-mautic-tools
        #     arguments: {}
        - - name: deploy-mautic-dev
            template: deploy-mautic-dev
            arguments: {} 

    - name: clone
      arguments: {}
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ''
        image: 'docker.io/alpine/git:v2.26.2'
        args:
          - clone
          - '--depth'
          - '1'
          - '--branch'
          - '{{workflow.parameters.BRANCH}}'
          - '--single-branch'
          - '{{workflow.parameters.REPO}}'
        workingDir: /mnt/vol
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
          - name: work
            mountPath: /mnt/vol

    - name: build-mautic-tools
      arguments: {}
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ''
        image: 'docker.io/openshift/origin-cli:latest'
        command:
          - sh
          - '-c'
        args:
          - >-
            oc process -f ./openshift/mautic.bc.yaml 
            -p IMAGE_TAG={{workflow.parameters.IMAGE_TAG}} 
            -p NAME={{workflow.parameters.NAME}}
            -p GIT_REF={{workflow.parameters.BRANCH}}
            -p GIT_REPO={{workflow.parameters.REPO}}
            -p NAMESPACE={{workflow.parameters.TOOLS_NAMESPACE}}
            -p HOSTADDRESS=apps.pathfinder.aro.devops.gov.bc.ca 
            | oc apply -f - -n {{workflow.parameters.TOOLS_NAMESPACE}};
            oc start-build -w {{workflow.parameters.NAME}};
            oc tag {{workflow.parameters.TOOLS_NAMESPACE}}/{{workflow.parameters.NAME}}:{{workflow.parameters.IMAGE_TAG}}
            {{workflow.parameters.DEV_NAMESPACE}}/{{workflow.parameters.NAME}}:{{workflow.parameters.IMAGE_TAG}} 
        workingDir: /mnt/vol/mautic-openshift
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
          - name: work
            mountPath: /mnt/vol

    - name: deploy-mautic-dev
      arguments: {}
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ''
        image: 'docker.io/openshift/origin-cli:latest'
        command:
          - sh
          - '-c'
        args: 
          - >-
            oc project -n {{workflow.parameters.DEV_NAMESPACE}};
            oc delete route {{workflow.parameters.NAME}};
            oc process -f ./openshift/secret.yaml 
            -p MYSQL_ROOT_PASSWORD=password
            | oc apply -f - -n {{workflow.parameters.DEV_NAMESPACE}};
            oc process -f ./openshift/mautic.dc.yaml 
            -p NAME={{workflow.parameters.NAME}} 
            -p IMAGE_TAG={{workflow.parameters.IMAGE_TAG}} 
            -p GIT_REF={{workflow.parameters.BRANCH}}
            -p GIT_REPO={{workflow.parameters.REPO}}
            -p NAMESPACE={{workflow.parameters.DEV_NAMESPACE}}
            -p HOSTADDRESS=apps.pathfinder.aro.devops.gov.bc.ca
            -n {{workflow.parameters.DEV_NAMESPACE}}
            | oc apply -f - -n {{workflow.parameters.DEV_NAMESPACE}}
        workingDir: /mnt/vol/mautic-openshift
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
          - name: work
            mountPath: /mnt/vol

  entrypoint: main
  arguments: {}
  serviceAccountName: workflow-creator
  volumeClaimTemplates:
    - metadata:
        name: work
        creationTimestamp: null
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 128Mi
        storageClassName: netapp-file-standard
      status: {}
  imagePullSecrets:
    - name: dockerhub-secret-mautic
