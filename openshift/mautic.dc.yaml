kind: Template
apiVersion: v1
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        deploymentconfig: ${NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: ${NAME}
            deploymentconfig: ${NAME}
        spec:
          volumes:
          - name: ${NAME}-cache
            emptyDir: {}
          - name: ${NAME}-logs
            emptyDir: {}
          - name: ${NAME}-php-config
            persistentVolumeClaim:
              claimName: ${NAME}-php-config
          - name: ${NAME}-cache-unsubscribe
            emptyDir: {}
          - name: ${NAME}-apache-conf
            configMap:
              name: ${NAME}-apache-config
          containers:
            - env:
                - name: MAUTIC_DB_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${NAME}-db
                - name: MAUTIC_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${NAME}-db
                - name: MAUTIC_DB_NAME
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${NAME}-db
                - name: MAUTIC_DB_HOST
                  value: ${NAME}-db
                - name: MAUTIC_DB_PORT
                  value: "3306"
              image: >-
                image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${NAME}
              imagePullPolicy: Always
              name: ${NAME}
              resources:
                cpu:
                  requests: 1000m
                  limits: 1500m
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - name: ${NAME}-apache-conf
                  mountPath: /etc/apache2/sites-enabled/000-default.conf
                  subPath: 000-default.conf
                - name: ${NAME}-apache-conf
                  mountPath: /etc/apache2/ports.conf
                  subPath: ports.conf
                - name: ${NAME}-cache
                  mountPath: /var/www/html/var/cache/
                - name: ${NAME}-logs
                  mountPath: /var/www/html/var/logs/
                - name: ${NAME}-php-config
                  mountPath: /var/www/html/app/config/
                - name: ${NAME}-cache-unsubscribe
                  mountPath: /var/www/html/app/../var/tmp/twig/
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
        app.openshift.io/vcs-ref: main
        app.openshift.io/vcs-uri: ${GIT_REPO}
        deployment.kubernetes.io/revision: '11'
        image.openshift.io/triggers: >-
          [{"from":{"kind":"ImageStreamTag","name":"mautic-openshift:latest","namespace":"${NAMESPACE}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mautic-openshift\")].image","pause":"false"}]
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"alpha.image.policy.openshift.io/resolve-names":"*","app.openshift.io/vcs-ref":"main","app.openshift.io/vcs-uri":${GIT_REPO},"deployment.kubernetes.io/revision":"2","image.openshift.io/triggers":"[{\"from\":{\"kind\":\"ImageStreamTag\",\"name\":\"mautic-openshift:latest\",\"namespace\":\"${NAMESPACE}\"},\"fieldPath\":\"spec.template.spec.containers[?(@.name==\\\"mautic-openshift\\\")].image\",\"pause\":\"false\"}]","openshift.io/generated-by":"OpenShiftWebConsole"},"generation":4,"labels":{"app":"mautic-openshift","app.kubernetes.io/component":"mautic-openshift","app.kubernetes.io/instance":"mautic-openshift","app.kubernetes.io/part-of":"mautic-app"},"managedFields":[{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:spec":{"f:template":{"f:spec":{"f:containers":{"k:{\"name\":\"mautic-openshift\"}":{"f:image":{}}}}}}},"manager":"openshift-controller-manager","operation":"Update","time":"2020-11-16T18:39:27Z"},{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:alpha.image.policy.openshift.io/resolve-names":{},"f:app.openshift.io/vcs-ref":{},"f:app.openshift.io/vcs-uri":{},"f:image.openshift.io/triggers":{},"f:openshift.io/generated-by":{}},"f:labels":{".":{},"f:app":{},"f:app.kubernetes.io/component":{},"f:app.kubernetes.io/instance":{},"f:app.kubernetes.io/part-of":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{"f:matchLabels":{".":{},"f:app":{}}},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:app":{},"f:deploymentconfig":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"mautic-openshift\"}":{".":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}},"manager":"Mozilla","operation":"Update","time":"2020-11-16T19:18:08Z"},{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}},"manager":"kube-controller-manager","operation":"Update","time":"2020-11-16T19:18:08Z"}],"name":"mautic-openshift","namespace":"${NAMESPACE}"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"mautic-openshift"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mautic-openshift","deploymentconfig":"mautic-openshift"}},"spec":{"containers":[{"env":[{"name":"MAUTIC_DB_HOST","value":"mariadb"},{"name":"MAUTIC_DB_USER","value":"mautic"},{"name":"MAUTIC_DB_NAME","value":"mautic"},{"name":"MAUTIC_DB_PASSWORD","value":"mautic"}],"image":"image-registry.openshift-image-registry.svc:5000/pltfrm-tools/mautic-openshift@sha256:be2cd008c24742f25a968af90d5970313243332d9cdd164e1dc8944f6d06af4b","imagePullPolicy":"Always","name":"mautic-openshift","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}}}
        openshift.io/generated-by: OpenShiftWebConsole
      generation: 11
      labels:
        app: ${NAME}
        deploymentConfig: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
        app.kubernetes.io/part-of: ${NAME}-app
      name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    spec:
      host: ${NAME}-${NAMESPACE}.${HOSTADDRESS}
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${NAME}
        weight: 100
      wildcardPolicy: None
    metadata:
      annotations:
        openshift.io/host.generated: 'true'
      labels:
        app: ${NAME}
        deploymentConfig: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
        app.kubernetes.io/part-of: ${NAME}-app
      name: ${NAME}
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: ${NAME}
      sessionAffinity: None
      type: ClusterIP
    metadata:
      annotations:
        app.openshift.io/vcs-ref: main
        app.openshift.io/vcs-uri: ${GIT_REPO}
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: ${NAME}
        deploymentConfig: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
        app.kubernetes.io/part-of: ${NAME}-app
      name: ${NAME} 
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      annotations:
        openshift.io/host.generated: 'true'
      labels:
        app: ${NAME}
        deploymentConfig: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
        app.kubernetes.io/part-of: ${NAME}-app
      name: ${NAME}-apache-config
    data:
      000-default.conf: |
        <VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf
        </VirtualHost>
        # vim: syntax=apache ts=4 sw=4 sts=4 sr noet

      ports.conf: |
        # If you just change the port or add more ports here, you will likely also
        # have to change the VirtualHost statement in
        # /etc/apache2/sites-enabled/000-default.conf
        Listen 8080
        # vim: syntax=apache ts=4 sw=4 sts=4 sr noet

  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: ${NAME}-db
          port: 3306
          protocol: TCP
          targetPort: 3306
      selector:
        name: ${NAME}-db
      sessionAffinity: None
      type: ClusterIP
    metadata:
      annotations:
        template.openshift.io/expose-uri: 'mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mariadb")].port}'
      labels:
        app: ${NAME}
        deploymentConfig: ${NAME}-db
        group: ${NAME}
      name: ${NAME}-db
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        name: ${NAME}-db
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: ${NAME}-db
        spec:
          containers:
            - env:
                - name: MYSQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${NAME}-db
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${NAME}-db
                - name: MYSQL_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-root-password
                      name: ${NAME}-db
                - name: MYSQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${NAME}-db
              image: >-
                image-registry.openshift-image-registry.svc:5000/openshift/mariadb@sha256:e3e8e56268c7c963a368457d92759f328796a99332a277c766767c5302fb0793
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 3306
                timeoutSeconds: 1
              name: mariadb
              ports:
                - containerPort: 3306
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - '-i'
                    - '-c'
                    - >-
                      MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u
                      $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  memory: 512Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/mysql/data
                  name: ${NAME}-mariadb-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - persistentVolumeClaim:
                claimName: ${NAME}-mariadb-data
              name: ${NAME}-mariadb-data
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - mariadb
            from:
              kind: ImageStreamTag
              name: 'mariadb:10.2'
              namespace: openshift
            lastTriggeredImage: >-
              image-registry.openshift-image-registry.svc:5000/openshift/mariadb@sha256:e3e8e56268c7c963a368457d92759f328796a99332a277c766767c5302fb0793
          type: ImageChange
        - type: ConfigChange
    metadata:
      annotations:
        app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"${NAME}"}]'
        template.alpha.openshift.io/wait-for-ready: 'true'
      generation: 2
      labels:
        deploymentConfig: ${NAME}-db
        template: mariadb-persistent-template
        group: ${NAME}
        app: ${NAME}
      name: ${NAME}-db
parameters:
- name: NAME
  displayName: name
  description: the value used to group components by a common name
  value: mautic
- name: GIT_REF
  displayName: Git Branch
  description: the git branch to build from
  value: main 
- name: GIT_REPO
  displayName: Git repository
  description: the git repo to build from
  value: https://github.com/patricksimonian/mautic-openshift
- name: NAMESPACE
  displayName: Namespace
  description: the namespace of the app
  value: de0974-tools
- name: HOSTADDRESS
  displayName: Host name
  description: The cluster host address
  value: apps.silver.devops.gov.bc.ca